package client_server;

enum ResultCode {
	LOGIN_FAILURE							= 1;
	LOGIN_SUCCESS							= 2;
}

enum TunnelType {
	TUNNEL_ALL								= 0;
	TUNNEL_LOCAL_TCP						= 1;
	TUNNEL_LOCAL_UDP						= 2;
	TUNNEL_EXTERNAL							= 3;
	TUNNEL_RELAY_TCP						= 4;
	TUNNEL_RELAY_UDP						= 5;
}

message Login {
	required string name					= 1;
	required string password				= 2;
	optional ResultCode login_result		= 3;	//for internal usage
}

message LoginResult {
	required ResultCode login_result		= 1;
	required string own_session_id			= 2;
}

message TunnelConnectAddress {
	required string ip						= 1;
	required int32 port						= 2;
}

message InitTunnel {
	required string ext_session_id			= 1;
	required string own_session_id			= 2;
	optional TunnelType type				= 3;
	optional TunnelConnectAddress address	= 4;
}

message TryConnectTo {
	required string ext_session_id			= 1;
	required string own_session_id			= 2;
	required TunnelType type				= 3;
	repeated TunnelConnectAddress adresses	= 4;
}

message InitTunnelStarted {
	required string ext_session_id			= 1;
	required string own_session_id			= 2;
}

message InitTunnelComplete {
	required string ext_session_id			= 1;
	required string own_session_id			= 2;
}

message PeerData {
	required string one_session_id			= 1;
	required string two_session_id			= 2;
	optional TunnelType type				= 3;
}

option optimize_for = LITE_RUNTIME;
